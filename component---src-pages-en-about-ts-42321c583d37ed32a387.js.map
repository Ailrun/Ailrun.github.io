{"version":3,"sources":["webpack:///./src/components/FlexSpacer.ts","webpack:///./src/pages/en/about.ts","webpack:///./src/components/PageTitle.tsx","webpack:///./src/data/about.ts","webpack:///./src/components/pages/about.tsx","webpack:///./src/components/NavigationBar.tsx","webpack:///./src/styles/constants.ts"],"names":["FlexSpacer","AboutPage","PageTitle","backgroundSrc","title","Root","TitleText","display","width","height","backgroundPosition","backgroundSize","backgroundColor","alignItems","C","backgroundImage","paddingLeft","color","fontWeight","fontSize","aboutData","Language","KO","ownerProfileCaption","subjects","entries","EN","language","useLanguage","data","dataAbout","SEO","description","image","imageAlt","pathname","og","type","additional","first_name","last_name","username","gender","NavigationBar","Info","InfoRoot","Owner","InfoSubjectList","map","subject","key","OwnerProfile","OwnerProfileImage","src","alt","OwnerProfileCaption","margin","flexWrap","flexDirection","lineHeight","paddingTop","order","InfoSubject","InfoSubjectRoot","InfoSubjectTitle","id","InfoSubjectEntryList","entry","InfoSubjectEntry","Title","to","NavigationList","getNavigationItems","navigationItem","NavigationItem","text","position","top","left","zIndex","Link","padding","NavigationItemRoot","mediaQueries","navigationBarHeight","fontSmallSize","fontBaseSize","fontLargeSize","fontHugeSize","fontGiantSize","textWhite","textBlack","textLightBlack","textVeryLightBlack","backgroundBlack","fontDancing","markdown","css","content","marginTop","marginBottom","h2","h3","h4","p","textIndent","marginLeft","li","table","a","textDecoration","code","overflow","borderRadius","whiteSpace","fontFamily","pre","blockquote","summary","cursor","userSelect","borderCollapse","borderTopStyle","borderColor","borderStyle","borderWidth","textAlign","border"],"mappings":"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","file":"component---src-pages-en-about-ts-42321c583d37ed32a387.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst FlexSpacer = styled.div({\n  flexGrow: 1,\n});\nexport default FlexSpacer;\n","import AboutPage from '../../components/pages/about';\n\nexport default AboutPage;\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nimport * as C from '../styles/constants';\n\nexport interface Props {\n  readonly backgroundSrc: string;\n  readonly title: string;\n}\nconst PageTitle: React.FC<Props> = ({ backgroundSrc, title }) => (\n  <Root backgroundSrc={backgroundSrc}>\n    <TitleText>{title}</TitleText>\n  </Root>\n);\nexport default PageTitle;\n\ninterface RootProps {\n  readonly backgroundSrc: string;\n}\nconst Root = styled.header<RootProps>({\n  display: 'flex',\n\n  width: '100%',\n  height: '24vw',\n\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundColor: 'black',\n\n  alignItems: 'center',\n\n  [C.mediaQueries[0]]: {\n    height: '44vw',\n\n    backgroundPosition: 'right',\n  },\n}, ({ backgroundSrc }) => ({\n  backgroundImage: `url('${backgroundSrc}')`,\n}));\n\nconst TitleText = styled.h1({\n  paddingLeft: '7%',\n\n  color: C.textWhite,\n  fontWeight: 'bold',\n  fontSize: C.fontGiantSize,\n\n  [C.mediaQueries[0]]: {\n    fontSize: C.fontHugeSize,\n  },\n});\n","import { Language } from '../utils/languages';\n\nconst aboutData = {\n  [Language.KO]: {\n    ownerProfileCaption: '맥주를 보며 즐거워하는 Clare',\n    subjects: [\n      {\n        title: '취미',\n        entries: [\n          '맥주의 바다에서 헤엄치기',\n          '맛난 음식을 찾아 모험하기',\n          '시 한 구절을 끄적이기',\n        ],\n      },\n      {\n        title: '연락처',\n        entries: [\n          'Github/Ailrun',\n        ],\n      },\n      {\n        title: '학력',\n        entries: [\n          '서울대학교 화학 학사',\n          '서울대학교 철학 학사',\n          '서울대학교 컴퓨터공학 학사',\n        ],\n      },\n    ],\n  },\n  [Language.EN]: {\n    ownerProfileCaption: 'Clare with a few cups of beer',\n    subjects: [\n      {\n        title: 'Hobby',\n        entries: [\n          'Enjoying life with beers',\n          'Falling in love with foods',\n          'Writing pieces of poem',\n        ],\n      },\n      {\n        title: 'Contact',\n        entries: [\n          'Github/Ailrun',\n        ],\n      },\n      {\n        title: 'Education',\n        entries: [\n          'Seoul Nat\\'l Univ, Bachelor\\'s degree of Chemistry',\n          'Seoul Nat\\'l Univ, Bachelor\\'s degree of Philosophy',\n          'Seoul Nat\\'l Univ, Bachelor\\'s degree of Computer Science and Engineering',\n        ],\n      },\n    ],\n  },\n};\nexport default aboutData;\n","import styled from '@emotion/styled';\nimport type { PageRendererProps } from 'gatsby';\nimport React from 'react';\n\nimport dataAbout from '../../data/about';\nimport useLanguage from '../../hooks/useLanguage';\nimport * as C from '../../styles/constants';\nimport type { Language } from '../../utils/languages';\nimport FlexSpacer from '../FlexSpacer';\nimport NavigationBar from '../NavigationBar';\nimport PageTitle from '../PageTitle';\nimport SEO from '../SEO';\n\nconst AboutPage: React.FC<PageRendererProps> = () => {\n  const language = useLanguage();\n  const data = dataAbout[language];\n\n  return (\n    <>\n      <SEO\n        title='About'\n        description='Who is Junyoung Clare Jang?'\n        image='https://raw.githubusercontent.com/Ailrun/media/master/blog-img/about-profile.png'\n        imageAlt='Junyoung Clare Jang with cups of beer'\n        pathname={`/${language}/about`}\n        og={{\n          type: 'profile',\n          additional: {\n            first_name: 'Clare',\n            last_name: 'Jang',\n            username: 'Ailrun',\n            gender: 'male',\n          },\n        }}\n      />\n      <NavigationBar />\n      <PageTitle\n        backgroundSrc='https://raw.githubusercontent.com/Ailrun/media/master/blog-img/about.png'\n        title='About'\n      />\n      <main>\n        <Info\n          ownerProfileCaption={data.ownerProfileCaption}\n          subjects={data.subjects}\n        />\n      </main>\n    </>\n  );\n};\nexport default AboutPage;\n\ntype Subject = typeof dataAbout[Language.KO]['subjects'][0];\n\ninterface InfoProps {\n  readonly ownerProfileCaption: string;\n  readonly subjects: Subject[];\n}\nconst Info: React.FC<InfoProps> = ({ ownerProfileCaption, subjects }) => (\n  <InfoRoot>\n    <Owner>Junyoung Clare Jang</Owner>\n    <InfoSubjectList>\n      {\n        subjects.map((subject) => (\n          <InfoSubject key={subject.title} {...{ subject }} />\n        ))\n      }\n    </InfoSubjectList>\n    <FlexSpacer />\n    <OwnerProfile>\n      <OwnerProfileImage\n        src='https://raw.githubusercontent.com/Ailrun/media/master/blog-img/about-profile.png'\n        alt={ownerProfileCaption}\n      />\n      <OwnerProfileCaption>{ownerProfileCaption}</OwnerProfileCaption>\n    </OwnerProfile>\n  </InfoRoot>\n);\n\nconst InfoRoot = styled.article({\n  display: 'flex',\n\n  margin: '3em auto',\n\n  width: '45%',\n\n  color: C.textLightBlack,\n\n  flexWrap: 'wrap',\n\n  [C.mediaQueries[0]]: {\n    width: '90%',\n\n    flexDirection: 'column',\n\n    alignItems: 'center',\n  },\n});\n\nconst Owner = styled.h2({\n  width: '100%',\n\n  lineHeight: 2,\n  fontWeight: 'bold',\n  fontSize: C.fontGiantSize,\n\n  [C.mediaQueries[0]]: {\n    display: 'inline',\n\n    width: 'unset',\n  },\n}, C.fontDancing);\n\nconst InfoSubjectList = styled.div({\n  width: '50%',\n\n  paddingTop: '0.5em',\n  paddingLeft: '1em',\n\n  [C.mediaQueries[0]]: {\n    width: '90%',\n\n    order: 2,\n  },\n});\n\nconst OwnerProfile = styled.figure({\n  width: '40%',\n\n  [C.mediaQueries[0]]: {\n    width: '60%',\n\n    order: 1,\n  },\n});\n\nconst OwnerProfileImage = styled.img({\n  width: '100%',\n\n  pointerEvents: 'auto',\n});\n\nconst OwnerProfileCaption = styled.figcaption({\n  textAlign: 'center',\n});\n\ninterface InfoSubjectProps {\n  readonly subject: Subject;\n}\nconst InfoSubject: React.FC<InfoSubjectProps> = ({ subject }) => (\n  <InfoSubjectRoot>\n    <InfoSubjectTitle id={`about-${subject.title}`}>{subject.title}</InfoSubjectTitle>\n    <InfoSubjectEntryList>\n      {\n        subject.entries.map((entry) => (\n          <InfoSubjectEntry key={entry}>{entry}</InfoSubjectEntry>\n        ))\n      }\n    </InfoSubjectEntryList>\n  </InfoSubjectRoot>\n);\n\nconst InfoSubjectRoot = styled.figure({\n  '& + &': {\n    marginTop: '1em',\n  },\n});\n\nconst InfoSubjectTitle = styled.figcaption({\n  fontSize: C.fontLargeSize,\n  fontWeight: 'bold',\n});\n\nconst InfoSubjectEntryList = styled.ul({\n  paddingLeft: '2em',\n\n  listStyleType: '\\'-\\'',\n});\n\nconst InfoSubjectEntry = styled.li({\n  paddingLeft: '0.5em',\n\n  fontSize: C.fontBaseSize,\n});\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport React from 'react';\n\nimport useLanguage from '../hooks/useLanguage';\nimport * as C from '../styles/constants';\nimport { Language } from '../utils/languages';\n\nimport FlexSpacer from './FlexSpacer';\n\nconst NavigationBar: React.FC<unknown> = () => {\n  const language = useLanguage();\n\n  return (\n    <Root>\n      <Title to={`/${language}/`}>\n        Valhalla of Valkyrie\n      </Title>\n      <FlexSpacer />\n      <NavigationList>\n        {\n          getNavigationItems(language).map((navigationItem) => (\n            <NavigationItem key={navigationItem.text} {...navigationItem} />\n          ))\n        }\n      </NavigationList>\n    </Root>\n  );\n};\nexport default NavigationBar;\n\nconst Root = styled.nav({\n  display: 'flex',\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n\n  width: '100vw',\n  height: C.navigationBarHeight,\n\n  backgroundColor: C.backgroundBlack,\n\n  color: C.textWhite,\n\n  alignItems: 'center',\n});\n\nconst Title = styled(Link)({\n  display: 'inline-block',\n\n  padding: '0 0.5em',\n\n  fontSize: C.fontLargeSize,\n\n  [C.mediaQueries[0]]: {\n    display: 'none',\n  },\n}, C.fontDancing);\n\nconst NavigationList = styled.ul({\n  display: 'flex',\n\n  /* Approximate maximum size of scrollbar\n   */\n  marginRight: '20px',\n\n  listStyle: 'none',\n\n  alignItems: 'center',\n});\n\ninterface ItemProps {\n  readonly to: string;\n  readonly text: string;\n}\nconst NavigationItem: React.FC<ItemProps> = ({ to, text }) => {\n  return (\n    <NavigationItemRoot>\n      <Link to={to}>\n        {text}\n      </Link>\n    </NavigationItemRoot>\n  );\n};\nconst NavigationItemRoot = styled.li({\n  display: 'inline-block',\n\n  padding: '0 0.5em',\n\n  fontSize: C.fontLargeSize,\n}, C.fontDancing);\n\n\nconst getNavigationItems: (language: Language) => ItemProps[] = (language) => {\n  return [\n    ...(\n      language === Language.KO ?\n        [{ to: `/${language}/posts/`, text: 'Posts' }] :\n        []\n    ),\n    ...[\n      { to: `/${language}/projects/`, text: 'Projects' },\n      { to: `/${language}/about/`, text: 'About' },\n    ],\n  ];\n};\n","import { SerializedStyles, css } from '@emotion/core';\n\nexport const mediaQueries = [\n  '@media (max-width: 60em)',\n];\n\nexport const navigationBarHeight = '42px';\n\nexport const fontSmallSize = '10pt';\nexport const fontBaseSize = '12pt';\nexport const fontLargeSize = '18pt';\nexport const fontHugeSize = '24pt';\nexport const fontGiantSize = '30pt';\n\nexport const textWhite = 'rgba(255, 255, 255, 0.84)';\nexport const textLightWhite = 'rgba(255, 255, 255, 0.73)';\nexport const textBlack = 'rgba(0, 0, 0, 0.84)';\nexport const textLightBlack = 'rgba(0, 0, 0, 0.73)';\nexport const textVeryLightBlack = 'rgba(0, 0, 0, 0.6)';\nexport const textBrown = 'rgba(100, 50, 50, 0.84)';\nexport const textLightBrown = 'rgba(150, 80, 50, 0.84)';\nexport const textRed = 'rgba(108, 0, 0, 0.84)';\nexport const textLightRed = 'rgba(216, 0, 0, 0.84)';\n\nexport const backgroundBlack = 'rgba(0, 0, 0, 0.73)';\nexport const backgroundWhite = 'rgba(255, 255, 255, 0.73)';\nexport const backgroundGray = 'rgba(200, 200, 200, 0.73)';\n\nexport const fontDancing: SerializedStyles = css({\n  fontFamily: '\"Dancing Script\", cursive',\n});\n\nexport const markdown: SerializedStyles = css({\n  color: textBlack,\n  fontSize: '12pt',\n\n  lineHeight: '1.7',\n\n  'h1::before': {\n    content: '\"DON\\'T USE THIS\"',\n  },\n\n  'h2, h3, h4, h5, h6': {\n    marginTop: '1em',\n    marginBottom: '0.5em',\n  },\n\n  h2: {\n    fontSize: '20pt',\n  },\n\n  h3: {\n    fontSize: '18pt',\n  },\n\n  h4: {\n    fontSize: '16pt',\n  },\n\n  p: {\n    margin: '0 1em',\n    marginTop: '1em',\n\n    textIndent: '1em',\n  },\n\n  'ol, ul': {\n    margin: '0 3em',\n    marginTop: '1em',\n\n    '> * > ol, > * > ul': {\n      margin: '0',\n      marginLeft: '0.5em',\n    },\n\n    '+ p': {\n      textIndent: 0,\n    },\n  },\n\n  li: {\n    marginTop: '0.5em',\n    marginLeft: '1em',\n\n    '> p': {\n      margin: 0,\n    },\n\n    '> p:first-of-type': {\n      textIndent: 0,\n    },\n\n    '> .truth-table': {\n      table: {\n        margin: '1em 0',\n      },\n    },\n\n    '> * > li': {\n      marginTop: '0.1em',\n\n      '> * > li': {\n        marginTop: 0,\n      },\n    },\n  },\n\n  a: {\n    color: textLightRed,\n\n    ':hover': {\n      textDecoration: 'underline',\n    },\n\n    ':visited': {\n      color: textRed,\n    },\n  },\n\n  code: {\n    margin: '0 0.5ex',\n\n    padding: '0 0.3em',\n\n    overflow: 'none',\n\n    backgroundColor: backgroundGray,\n    borderRadius: '3px',\n\n    whiteSpace: 'nowrap',\n\n    fontFamily: 'monospace',\n  },\n\n  pre: {\n    margin: '0 0.5ex',\n\n    padding: '0 0.3em',\n\n    backgroundColor: backgroundGray,\n    borderRadius: '3px',\n\n    '> code': {\n      margin: 0,\n\n      padding: 0,\n\n      backgroundColor: 'initial',\n      borderRadius: '0',\n    },\n  },\n\n  blockquote: {\n    margin: '1.5em 1.5em',\n\n    color: textVeryLightBlack,\n\n    '+ p': {\n      textIndent: '0',\n    },\n  },\n\n  'details.answer': {\n    display: 'block',\n\n    marginBottom: '0.5em',\n\n    summary: {\n      width: 'fit-content',\n\n      cursor: 'pointer',\n      userSelect: 'none',\n\n      p: {\n        display: 'inline',\n\n        margin: 0,\n\n        textIndent: 0,\n      },\n\n      'p:first-of-type': {\n        marginTop: '-1.5em',\n      },\n\n      '+ p': {\n        margin: 0,\n        marginLeft: '1em',\n      },\n\n      '+ ol, + ul': {\n        margin: '1em 1em',\n      },\n    },\n  },\n\n  '.truth-table': {\n    table: {\n      margin: '1em 3em',\n\n      backgroundColor: backgroundWhite,\n      borderCollapse: 'collapse',\n\n      '> thead + tbody': {\n        borderTopStyle: 'double',\n      },\n\n      '> * > tr': {\n        '> th, > td': {\n          padding: '0 0.5em',\n\n          borderColor: textLightBlack,\n          borderStyle: 'solid',\n          borderWidth: '1px',\n\n          textAlign: 'center',\n        },\n      },\n\n      '+ p': {\n        textIndent: 0,\n      },\n    },\n  },\n\n  'iframe[src^=\"/\"]': {\n    display: 'block',\n    margin: '2em 10%',\n\n    width: '80%',\n\n    border: 'none',\n  },\n});\n"],"sourceRoot":""}