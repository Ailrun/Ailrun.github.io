{"componentChunkName":"component---src-components-templates-post-template-tsx","path":"/draft2/ko/post/logic-for-programmers-002/","result":{"data":{"markdownPost":{"title":"프로그래머를 위한 논리학 - 2","date":"a year ago","postPath":"/draft2/ko/post/logic-for-programmers-002/","draft":true,"parent":{"__typename":"MarkdownRemark","html":"<h2 id=\"prologue\" style=\"position:relative;\">세번째 글을 열면서<a href=\"#prologue\" aria-label=\"prologue permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p><a href=\"/ko/post/logic-for-programmers-001/\">지난 글</a>에서는 공리와 추론 규칙에 대해 알아보고, 그 중 '고전 자연 연역 체계'라고 불리는 공리와 추론 규칙의 모음에 대해 설명하고 사용해 보았다. 이번 글은 고전 자연 연역 체계를 더 써보고 싶은 독자들을 위한 약간의 퍼즐들로 시작해, 이번 글에서 소개한다고 약속했던 난해한 논리 체계 두 개를 다뤄볼 것이다. 이 중 '구성적 자연 연역 체계'라고 불리는 체계는 강한 자료형 개발에 응용되는 중요한 개념을 포함하고있는 논리 체계이다. 이 개념 역시 이 글에서 간략한 소개를 할 것이나, 이 개념에 대한 자세한 설명은 논리학에 대한 더 많은 지식을 필요로 하기 때문에, 보다 구체적인 설명은 이후의 글로 넘기도록 하겠다.</p>\n<h2 id=\"table-of-contents\" style=\"position:relative;\">연작의 목차<a href=\"#table-of-contents\" aria-label=\"table of contents permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ul>\n<li>\n<p>이전 글</p>\n<ul>\n<li><a href=\"/ko/post/logic-for-programmers-000/\">프로그래머를 위한 논리학 - 0</a></li>\n<li><a href=\"/ko/post/logic-for-programmers-001/\">프로그래머를 위한 논리학 - 1</a></li>\n</ul>\n</li>\n<li>\n<p>이 글</p>\n<ul>\n<li><a href=\"./#prologue\">세번째 글을 열면서</a></li>\n<li>\n<p><a href=\"./#zeroth-advance-1\">명제 논리(영차 논리) 심화 - 1</a></p>\n<ul>\n<li><a href=\"./#more-arguments-for-0th-classical-natural-deduction\">퍼즐 맞춰보기 : 고전 자연 연역 체계로 건전함을 증명할 수 있는 논증들</a></li>\n<li><a href=\"./#jan-s-zeroth-system\">단순하지만 난해한 논리 체계 : 얀 워카시에비치의 체계</a></li>\n<li><a href=\"./#constructive-natural-deduction-of-zeroth\">강한 자료형 개발에 응용되는 논리 체계 : 구성적 자연 연역 체계</a></li>\n</ul>\n</li>\n<li><a href=\"./#epilogue\">세번째 글을 마치며</a></li>\n</ul>\n</li>\n<li>\n<p>다음 글</p>\n<ul>\n<li>[작성중…] 명제 논리(영차 논리) 심화 - 2</li>\n<li>술어 논리(일차 논리) 기초</li>\n<li>술어 논리(일차 논리) 심화</li>\n<li>고차 논리 기초</li>\n<li>양상 논리 기초</li>\n<li>미정…</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"zeroth-advance-1\" style=\"position:relative;\">명제 논리(영차 논리) 심화 - 1<a href=\"#zeroth-advance-1\" aria-label=\"zeroth advance 1 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h3 id=\"more-arguments-for-0th-classical-natural-deduction\" style=\"position:relative;\">퍼즐 맞춰보기 : 고전 자연 연역 체계로 건전함을 증명할 수 있는 논증들<a href=\"#more-arguments-for-0th-classical-natural-deduction\" aria-label=\"more arguments for 0th classical natural deduction permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>이전 장의 연습 문제만으로는 성에 차지 않는 몇몇 독자들을 위해 더 많은 (고전 자연 연역 체계로 건전성 증명이 가능한) 논증들을 준비해 보았다. 이전의 연습 문제로도 충분하고도 남았던 독자들은 <a href=\"./#more-arguments-for-0th-classical-natural-deduction\">다음 절</a>부터 읽기 바란다.</p>\n<h3 id=\"jan-s-zeroth-system\" style=\"position:relative;\">단순하지만 난해한 논리 체계 : 얀 워카시에비치의 체계<a href=\"#jan-s-zeroth-system\" aria-label=\"jan s zeroth system permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>고전 자연 연역 체계는 5 개의 논리연산자(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>↔</mo></mrow><annotation encoding=\"application/x-tex\">\\leftrightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">↔</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\to</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∧</mo></mrow><annotation encoding=\"application/x-tex\">\\land</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.55556em;vertical-align:0em;\"></span><span class=\"mord\">∧</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∨</mo></mrow><annotation encoding=\"application/x-tex\">\\lor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.55556em;vertical-align:0em;\"></span><span class=\"mord\">∨</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\lnot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord\">¬</span></span></span></span>)와 0 개의 공리, 14 개의 추론 규칙으로 되어있다. 이보다 더 단순한 체계는 없을까? 다시 말해, 이보다 더 적은 수의 논리 연산자, 공리, 추론 규칙을 사용하는 체계는 없을까? 물론 0 개의 공리보다 더 적은 수의 공리를 사용하는 것은 불가능하지만, 5 개의 논리연산자나 14 개의 추론 규칙보다 더 적은 수의 논리연산자/추론 규칙을 사용하는 것은 가능하다. '얀 워카시에비치'('Jan_Łukasiewicz')라는 논리학자(1878-1956)가 세운 오늘날에도 자주 언급되는 체계는 2 개의 논리 연산자, 3 개의 공리, 그리고 2 개의 추론 규칙만을 가지고 있다. 이 체계는 설명하기에는 단순하지만 이해하거나 증명에 사용하기에는 훨씬 어렵기 때문에</p>\n<h3 id=\"constructive-natural-deduction-of-zeroth\" style=\"position:relative;\">강한 자료형 개발에 응용되는 논리 체계 : 구성적 자연 연역 체계<a href=\"#constructive-natural-deduction-of-zeroth\" aria-label=\"constructive natural deduction of zeroth permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h2 id=\"epilogue\" style=\"position:relative;\">세번째 글을 마치며<a href=\"#epilogue\" aria-label=\"epilogue permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>","excerpt":"세번째 글을 열면서 지난 글에서는 공리와 추론 규칙에 대해 알아보고, 그 중 '고전 자연 연역 체계'라고 불리는 공리와 추론 규칙의 모음에 대해 설명하고 사용해 보았다. 이번 글…"}}},"pageContext":{"id":"b9b04ad8-ee51-550c-8a74-b53f36a22885"}},"staticQueryHashes":["2628062064"]}