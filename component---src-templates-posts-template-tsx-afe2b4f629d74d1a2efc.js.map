{"version":3,"sources":["webpack:///./src/components/PostList.tsx","webpack:///./src/templates/PostsTemplate.tsx"],"names":["PostList","posts","PostListRoot","map","post","key","id","Post","PostRoot","PostLink","to","postPath","PostTitle","title","FlexSpacer","PostDate","date","PostExcerpt","excerpt","Link","marginBottom","fontSize","C","color","marginLeft","width","PostsTemplate","data","location","refineData","Layout","NavigationBar","language","locationToLanguage","PageTitle","backgroundSrc","PostListWrapper","query","md","frontmatter","parent"],"mappings":"qNAsBeA,EAXmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChC,YAACC,EAAD,KAEID,EAAME,KAAI,SAACC,GAAD,OACR,YAAC,WAAD,CAAUC,IAAKD,EAAKE,IAClB,YAAC,EAAS,CAAEF,eAgBhBF,EAAe,4FASfK,EAA4B,SAAC,GAAD,IAAGH,EAAH,EAAGA,KAAH,OAChC,YAACI,EAAD,KACE,YAACC,EAAD,CAAUC,GAAIN,EAAKO,UACjB,YAACC,EAAD,KAAYR,EAAKS,OACjB,YAACC,EAAA,EAAD,MACA,YAACC,EAAD,KAAWX,EAAKY,MAChB,YAACC,EAAD,KAAcb,EAAKc,QAAnB,WAKAV,EAAW,oGAQXC,EAAW,YAAOU,IAAP,2GASXP,EAAY,sCAAU,CAC1BQ,aAAc,QAEdC,SAAUC,IACVC,MAAOD,MAGHP,EAAW,wCAAY,CAC3BM,SAAUC,IACVC,MAAOD,MAGHL,EAAc,wCAAY,CAC9BO,WAAY,MAEZC,MAAO,mBAEPJ,SAAUC,IACVC,MAAOD,M,kDC1DMI,UAhBwB,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACxC3B,EAAQ4B,EAAWF,GAEzB,OACE,YAACG,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CAAeC,SAAUC,YAAmBL,KAC5C,YAACM,EAAA,EAAD,CACEC,cAAc,0EACdtB,MAAM,UAER,YAACuB,EAAD,KACE,YAAC,EAAD,CAAUnC,MAAOA,OAXzB,IAkCaoC,EAAQ,aAsBfR,EAAa,SAACF,GAClB,OAAOA,EAAKW,GAAGrC,MAAME,KAAI,SAACC,GAAD,YAAW,CAClCE,GAAIF,EAAKE,GACTO,MAAOT,EAAKmC,YAAY1B,MACxBG,KAAI,UAAEZ,EAAKmC,YAAYvB,YAAnB,QAA2BZ,EAAKoC,OAAOxB,KAC3CE,QAASd,EAAKc,QACdP,SAAUP,EAAKO,cAIbyB,EAAkB","file":"component---src-templates-posts-template-tsx-afe2b4f629d74d1a2efc.js","sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport React, { Fragment } from 'react';\n\nimport * as C from '../styles/constants';\n\nimport FlexSpacer from './FlexSpacer';\n\nexport interface Props {\n  readonly posts: PostInfo[];\n}\nconst PostList: React.FC<Props> = ({ posts }) => (\n  <PostListRoot>\n    {\n      posts.map((post) => (\n        <Fragment key={post.id}>\n          <Post {...{ post }} />\n        </Fragment>\n      ))\n    }\n  </PostListRoot>\n);\nexport default PostList;\n\nexport interface PostInfo {\n  readonly id: string;\n  readonly title: string;\n  readonly date: string;\n  readonly excerpt: string;\n  readonly postPath: string;\n}\n\nconst PostListRoot = styled.ul({\n  width: '100%',\n\n  listStyle: 'none',\n});\n\ninterface PostProps {\n  post: PostInfo;\n}\nconst Post: React.FC<PostProps> = ({ post }) => (\n  <PostRoot>\n    <PostLink to={post.postPath}>\n      <PostTitle>{post.title}</PostTitle>\n      <FlexSpacer />\n      <PostDate>{post.date}</PostDate>\n      <PostExcerpt>{post.excerpt} ...</PostExcerpt>\n    </PostLink>\n  </PostRoot>\n);\n\nconst PostRoot = styled.li({\n  width: '100%',\n\n  '& + &': {\n    marginTop: '40px',\n  },\n});\n\nconst PostLink = styled(Link)({\n  display: 'flex',\n\n  width: '100%',\n\n  alignItems: 'center',\n  flexWrap: 'wrap',\n});\n\nconst PostTitle = styled.h3({\n  marginBottom: '0.5em',\n\n  fontSize: C.fontLargeSize,\n  color: C.textBlack,\n});\n\nconst PostDate = styled.span({\n  fontSize: C.fontSmallSize,\n  color: C.textVeryLightBlack,\n});\n\nconst PostExcerpt = styled.span({\n  marginLeft: '1em',\n\n  width: 'calc(100% - 1em)',\n\n  fontSize: C.fontBaseSize,\n  color: C.textLightBlack,\n});\n","import styled from '@emotion/styled';\nimport { PageRendererProps, graphql } from 'gatsby';\nimport React from 'react';\n\nimport Layout from '../components/Layout';\nimport NavigationBar from '../components/NavigationBar';\nimport PageTitle from '../components/PageTitle';\nimport PostList, { PostInfo as PostListPostInfo } from '../components/PostList';\nimport { locationToLanguage } from '../languages';\n\ninterface Props extends PageRendererProps {\n  readonly data: Data;\n}\nconst PostsTemplate: React.FC<Props> = ({ data, location }) => {\n  const posts = refineData(data);\n\n  return (\n    <Layout>\n      <NavigationBar language={locationToLanguage(location)} />\n      <PageTitle\n        backgroundSrc='https://raw.githubusercontent.com/Ailrun/media/master/blog-img/post.png'\n        title='Posts'\n      />\n      <PostListWrapper>\n        <PostList posts={posts} />\n      </PostListWrapper>\n    </Layout>\n  );\n};\nexport default PostsTemplate;\n\ninterface Data {\n  readonly md: {\n    readonly posts: {\n      readonly frontmatter: {\n        readonly title: string;\n        readonly date?: string;\n      };\n      readonly id: string;\n      readonly excerpt: string;\n      readonly postPath: string;\n      readonly parent: {\n        readonly date: string;\n      };\n    }[];\n  };\n}\nexport const query = graphql`\n  query ($language: String) {\n    md: allMarkdownRemark(filter: {language: {eq: $language}}) {\n      posts: nodes {\n        frontmatter {\n          title\n          date(fromNow: true)\n        }\n        id\n        excerpt\n        postPath\n\n        parent {\n          ... on File {\n            date: birthTime(fromNow: true)\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst refineData = (data: Data): PostListPostInfo[] => {\n  return data.md.posts.map((post) => ({\n    id: post.id,\n    title: post.frontmatter.title,\n    date: post.frontmatter.date ?? post.parent.date,\n    excerpt: post.excerpt,\n    postPath: post.postPath,\n  }));\n};\n\nconst PostListWrapper = styled.main({\n  margin: '0 20vw',\n  marginTop: '60px',\n\n  width: '60vw',\n  minHeight: '50vh',\n});\n"],"sourceRoot":""}