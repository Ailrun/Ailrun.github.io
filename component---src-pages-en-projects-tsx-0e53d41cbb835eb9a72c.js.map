{"version":3,"sources":["webpack:///./src/pages/en/projects.tsx","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/PageTitle.tsx","webpack:///./src/data/projects.ts","webpack:///./src/components/pages/projects.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["ProjectsPage","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","PageTitle","backgroundSrc","title","Root","TitleText","backgroundImage","paddingLeft","color","C","fontWeight","fontSize","languageNeutralProjects","projectGroups","projects","link","images","dataProjects","Language","KO","EN","location","language","locationToLanguage","data","Layout","NavigationBar","ProjectGroupList","ProjectGroupListRoot","map","projectGroup","i","key","margin","width","ProjectGroup","ProjectGroupRoot","ProjectGroupTitle","id","ProjectGroupTitleSeparator","ProjectList","project","ProjectSeparator","Project","ProjectRoot","ProjectTitle","href","image","src","display","padding","alignItems","img","maxHeight","url","this"],"mappings":"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","file":"component---src-pages-en-projects-tsx-0e53d41cbb835eb9a72c.js","sourcesContent":["import ProjectsPage from '../../components/pages/projects';\n\nexport default ProjectsPage;\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nimport * as C from '../styles/constants';\n\nexport interface Props {\n  readonly backgroundSrc: string;\n  readonly title: string;\n}\nconst PageTitle: React.FC<Props> = ({ backgroundSrc, title }) => (\n  <Root backgroundSrc={backgroundSrc}>\n    <TitleText>{title}</TitleText>\n  </Root>\n);\nexport default PageTitle;\n\ninterface RootProps {\n  readonly backgroundSrc: string;\n}\nconst Root = styled.header<RootProps>({\n  display: 'flex',\n\n  width: '100%',\n  height: '24vw',\n\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundColor: 'white',\n\n  alignItems: 'center',\n}, ({ backgroundSrc }) => ({\n  backgroundImage: `url('${backgroundSrc}')`,\n}));\n\nconst TitleText = styled.h1({\n  paddingLeft: '7%',\n\n  color: C.textWhite,\n  fontWeight: 'bold',\n  fontSize: C.fontGiantSize,\n});\n","import { Language } from '../utils/languages';\n\nconst languageNeutralProjects = {\n  projectGroups: [\n    {\n      title: 'Haskell',\n      projects: [\n        {\n          title: 'CUTE Lang',\n          link: 'https://github.com/CUTE-Lang',\n          images: [\n            'https://avatars0.githubusercontent.com/u/17797042?v=3&s=200',\n          ],\n        },\n        {\n          title: 'Htaut',\n          link: 'https://github.com/Ailrun/Htaut',\n          images: [\n            'https://travis-ci.org/Ailrun/Htaut.svg',\n            'https://img.shields.io/hackage/v/htaut.svg?maxAge=2592000',\n          ],\n        },\n        {\n          title: 'LambdaDB',\n          link: 'https://github.com/Ailrun/LambdaDB',\n          images: [\n            'https://img.shields.io/badge/stack->=1.1-blue.svg?style=flat',\n            'https://img.shields.io/badge/status-alpha-orange.svg?style=flat',\n            'https://img.shields.io/hackage/v/LambdaDB.svg',\n            'https://travis-ci.org/Ailrun/LambdaDB.svg?branch=v0.0.0.6',\n          ],\n        },\n      ],\n    },\n    {\n      title: 'Emacs',\n      projects: [\n        {\n          title: 'yet-another-emacs-settings',\n          link: 'https://github.com/Ailrun/yet-another-emacs-settings',\n          images: [\n            'https://img.shields.io/badge/Version-0.02.00-lightgrey.svg?style=flat',\n            'https://img.shields.io/badge/Status-Alpha-yellow.svg?style=flat',\n          ],\n        },\n        {\n          title: 'coq-commenter',\n          link: 'https://github.com/Ailrun/coq-commenter',\n          images: [\n            'https://melpa.org/packages/coq-commenter-badge.svg',\n          ],\n        },\n      ],\n    },\n    {\n      title: 'Study',\n      projects: [\n        {\n          title: 'core-lang-haskell',\n          link: 'https://github.com/Ailrun/core-lang-haskell',\n          images: [],\n        },\n        {\n          title: 'TRPL-study',\n          link: 'https://github.com/Ailrun/TRPL-study',\n          images: [],\n        },\n        {\n          title: 'Programming_in_Haskell',\n          link: 'https://github.com/Ailrun/Programming_in_Haskell',\n          images: [],\n        },\n        {\n          title: 'StackCalc',\n          link: 'https://github.com/Ailrun/StackCalc',\n          images: [],\n        },\n        {\n          title: 'BigInteger',\n          link: 'https://github.com/Ailrun/BigInteger',\n          images: [],\n        },\n        {\n          title: 'Elevator2way7floor',\n          link: 'https://github.com/Ailrun/Elevator2way7floor',\n          images: [],\n        },\n        {\n          title: 'LD_8bit_Microprocessor',\n          link: 'https://github.com/Ailrun/LD_8bit_Microprocessor',\n          images: [],\n        },\n      ],\n    },\n  ],\n};\n\nconst dataProjects = {\n  [Language.KO]: languageNeutralProjects,\n  [Language.EN]: languageNeutralProjects,\n};\nexport default dataProjects;\n","import styled from '@emotion/styled';\nimport { PageRendererProps } from 'gatsby';\nimport React, { Fragment } from 'react';\n\nimport dataProjects from '../../data/projects';\nimport * as C from '../../styles/constants';\nimport { Language, locationToLanguage } from '../../utils/languages';\nimport Layout from '../Layout';\nimport NavigationBar from '../NavigationBar';\nimport PageTitle from '../PageTitle';\n\nconst ProjectsPage: React.FC<PageRendererProps> = ({ location }) => {\n  const language = locationToLanguage(location);\n  const data = dataProjects[language];\n\n  return (\n    <Layout language={language}>\n      <NavigationBar language={language} />\n      <PageTitle\n        backgroundSrc='https://raw.githubusercontent.com/Ailrun/media/master/blog-img/project.png'\n        title='Projects'\n      />\n      <ProjectGroupList projectGroups={data.projectGroups} />\n    </Layout>\n  );\n};\nexport default ProjectsPage;\n\ntype ProjectGroup = typeof dataProjects[Language.KO]['projectGroups'][0];\ntype Project = ProjectGroup['projects'][0];\n\ninterface ProjectGroupListProps {\n  readonly projectGroups: ProjectGroup[];\n}\nconst ProjectGroupList: React.FC<ProjectGroupListProps> = ({ projectGroups }) => {\n  return (\n    <ProjectGroupListRoot>\n      {\n        projectGroups.map((projectGroup, i) => (\n          <ProjectGroup key={i} {...{ projectGroup }} />\n        ))\n      }\n    </ProjectGroupListRoot>\n  );\n};\n\nconst ProjectGroupListRoot = styled.main({\n  margin: '3em auto',\n\n  width: '80%',\n\n  color: C.textLightBlack,\n});\n\ninterface ProjectGroupProps {\n  readonly projectGroup: ProjectGroup;\n}\nconst ProjectGroup: React.FC<ProjectGroupProps> = ({ projectGroup }) => {\n  return (\n    <ProjectGroupRoot>\n      <ProjectGroupTitle id={projectGroup.title}>{projectGroup.title}</ProjectGroupTitle>\n      <ProjectGroupTitleSeparator />\n      <ProjectList>\n        {\n          projectGroup.projects.map((project, i) => (\n            <Fragment key={i}>\n              {\n                i !== 0 ? (\n                  <ProjectSeparator />\n                ) : null\n              }\n              <Project {...{ project }} />\n            </Fragment>\n          ))\n        }\n      </ProjectList>\n    </ProjectGroupRoot>\n  );\n};\n\nconst ProjectGroupRoot = styled.figure({\n  '& + &': {\n    marginTop: '1em',\n  },\n});\n\nconst ProjectGroupTitle = styled.figcaption({\n  fontWeight: 'bold',\n  fontSize: C.fontLargeSize,\n});\n\nconst ProjectGroupTitleSeparator = styled.hr({\n  color: C.textLightBlack,\n});\n\nconst ProjectList = styled.ul({\n  padding: 0,\n  paddingLeft: '4em',\n\n  listStyleType: 'none',\n});\n\nconst ProjectSeparator = styled.hr({\n  color: C.textLightBlack,\n});\n\ninterface ProjectProps {\n  readonly project: Project;\n}\nconst Project: React.FC<ProjectProps> = ({ project }) => {\n  return (\n    <ProjectRoot>\n      <ProjectTitle>\n        <a href={project.link}>{project.title}</a>\n      </ProjectTitle>\n      {\n        project.images.map((image) => (\n          <img key={image} src={image} />\n        ))\n      }\n    </ProjectRoot>\n  );\n};\n\nconst ProjectRoot = styled.li({\n  display: 'flex',\n\n  padding: '0.5em 0',\n\n  fontSize: C.fontBaseSize,\n\n  alignItems: 'center',\n\n  img: {\n    maxHeight: '1.8em',\n\n    fontSize: 'inherit',\n  },\n});\n\nconst ProjectTitle = styled.h3({\n  width: '25em',\n\n  fontWeight: 'normal',\n});\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}