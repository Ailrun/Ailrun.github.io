{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/pages/en/index.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","IndexPage","data","language","Language","EN","Wrapper","json","banners","map","bannerData","i","Banner","key","isLeft","color","C","BannerWrapper","backgroundSrc","background","BannerHeader","BannerTitle","title","BannerSubtitle","description","BannerLink","to","link","linkTitle","backgroundImage","left","fontSize","whiteSpace","fontWeight","Link","position","right","bottom","url","this"],"mappings":"8EAAA,IAAIA,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUC,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOR,EAAQG,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQT,EAAM,UAAY,KACtFQ,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKZ,GACfJ,EAAQA,EAAQkB,EAAIlB,EAAQmB,EAAIlB,GAAM,WACpC,IAAImB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,yyCCQDO,UAhBsB,WACnC,IAAMC,EAAO,OAEb,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAeC,SAAUC,IAASC,KAClC,YAACC,EAAD,KAEIJ,EAAKK,KAAKC,QAAQC,KAAI,SAACC,EAAYC,GAAb,OACpB,YAACC,EAAD,GAAQC,IAAKF,GAAO,CAAED,aAAYI,OAAQH,EAAI,GAAM,WAmChE,IAAML,EAAU,yCAAY,CAC1BS,MAAOC,MAQHJ,EAAgC,SAAC,GAAD,IAAGF,EAAH,EAAGA,WAAYI,EAAf,EAAeA,OAAf,OACpC,YAACG,EAAD,CAAeC,cAAeR,EAAWS,YACvC,YAACC,EAAiB,CAAEN,UAClB,0BACE,YAACO,EAAD,KAAcX,EAAWY,OACzB,YAACC,EAAD,KAAiBb,EAAWc,eAGhC,YAACC,EAAD,CAAYC,GAAIhB,EAAWiB,MACxBjB,EAAWkB,UAAY,QAQxBX,EAAgB,sIAQnB,kBAAwB,CACzBY,gBAAiB,QADhB,EAAGX,cACW,SAGXE,EAAe,oIASlB,kBAAiB,CAClBU,KADC,EAAGhB,OACW,KAAO,UAGlBO,EAAc,uCAAU,CAC5BU,SAAUf,MAGNO,EAAiB,uCAAU,CAC/BS,WAAY,WACZD,SAAUf,IACViB,WAAY,WAGRR,EAAa,YAAOS,IAAP,sBAAa,CAC9BC,SAAU,WACVC,MAAO,MACPC,OAAQ,MAERN,SAAUf,O,kCCrHZ,EAAQ,OAAR,CAA0B,QAAQ,SAAUnC,GAC1C,OAAO,SAAcyD,GACnB,OAAOzD,EAAW0D,KAAM,IAAK,OAAQD","file":"component---src-pages-en-index-tsx-d1b1c663fb3bd8198a8d.js","sourcesContent":["var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import styled from '@emotion/styled';\nimport { graphql, useStaticQuery, Link } from 'gatsby';\nimport React from 'react';\n\nimport { Language } from '../../languages';\nimport * as C from '../../styles/constants';\nimport Layout from '../../components/Layout';\nimport NavigationBar from '../../components/NavigationBar';\n\nconst IndexPage: React.FC<unknown> = () => {\n  const data = useStaticQuery<Data>(query);\n\n  return (\n    <Layout>\n      <NavigationBar language={Language.EN} />\n      <Wrapper>\n        {\n          data.json.banners.map((bannerData, i) => (\n            <Banner key={i} {...{ bannerData, isLeft: i % 2 !== 0 }} />\n          ))\n        }\n      </Wrapper>\n    </Layout>\n  );\n};\nexport default IndexPage;\n\ninterface Data {\n  readonly json: {\n    readonly banners: Banner[];\n  };\n}\ninterface Banner {\n  readonly background: string;\n  readonly description: string;\n  readonly link: string;\n  readonly linkTitle: string;\n  readonly title: string;\n}\nconst query = graphql`\n  query {\n    json: mainJson {\n      banners {\n        background\n        description\n        link\n        linkTitle\n        title\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.main({\n  color: C.textWhite,\n});\n\ninterface BannerProps {\n  bannerData: Banner;\n  isLeft: boolean;\n}\n\nconst Banner: React.FC<BannerProps> = ({ bannerData, isLeft }) => (\n  <BannerWrapper backgroundSrc={bannerData.background}>\n    <BannerHeader {...{ isLeft }}>\n      <hgroup>\n        <BannerTitle>{bannerData.title}</BannerTitle>\n        <BannerSubtitle>{bannerData.description}</BannerSubtitle>\n      </hgroup>\n    </BannerHeader>\n    <BannerLink to={bannerData.link}>\n      {bannerData.linkTitle + \" >\"}\n    </BannerLink>\n  </BannerWrapper>\n);\n\ninterface BannerWrapperProps {\n  readonly backgroundSrc: string;\n}\nconst BannerWrapper = styled.article<BannerWrapperProps>({\n  position: 'relative',\n\n  width: '100%',\n  height: '26vw',\n\n  backgroundColor: 'black',\n  backgroundSize: 'cover',\n}, ({ backgroundSrc }) => ({\n  backgroundImage: `url('${backgroundSrc}')`,\n}));\n\nconst BannerHeader = styled.header<{ isLeft: boolean }>({\n  display: 'flex',\n  position: 'absolute',\n  top: '50%',\n  bottom: '50%',\n\n  lineHeight: 1.3,\n\n  alignItems: 'center',\n}, ({ isLeft }) => ({\n  left: isLeft ? '7%' : '73%',\n}));\n\nconst BannerTitle = styled.h3({\n  fontSize: C.fontHugeSize,\n});\n\nconst BannerSubtitle = styled.h4({\n  whiteSpace: 'pre-wrap',\n  fontSize: C.fontLargeSize,\n  fontWeight: 'normal',\n});\n\nconst BannerLink = styled(Link)({\n  position: 'absolute',\n  right: '2em',\n  bottom: '1em',\n\n  fontSize: C.fontBaseSize,\n});\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}