{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/PredicateLogicEditor.tsx","webpack:///./node_modules/core-js/modules/es6.string.anchor.js"],"names":["$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","PredicateLogicEditor","initialContent","onContentChange","domRef","useRef","updatePropNumber","useCallback","editor","propNumber","eachLine","line","propNumberElement","document","createElement","className","lineNumber","getLineNumber","getLine","innerHTML","setGutterMarker","useEffect","current","Codemirror","mode","lineNumbers","refresh","on","eventEditor","getValue","PredicateLogicEditorWrapper","ref","name","this"],"mappings":"+EAAA,IAAIA,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUC,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOR,EAAQG,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQT,EAAM,UAAY,KACtFQ,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKZ,GACfJ,EAAQA,EAAQkB,EAAIlB,EAAQmB,EAAIlB,GAAM,WACpC,IAAImB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,sGCqCDO,UA9C+B,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,gBACzDC,EAASC,iBAAuB,MAEhCC,EAAmBC,uBAAY,SAACC,GACpC,IAAIC,EAAa,EAEjBD,EAAOE,UAAS,SAACC,GACf,IAAMC,EAAoBC,SAASC,cAAc,OACjDF,EAAkBG,UAAY,wBAE9B,IAAMC,EAAaR,EAAOS,cAAcN,GACrB,OAAfK,GAAsD,KAA/BR,EAAOU,QAAQF,IACxCJ,EAAkBO,UAAYhC,OAAOsB,GACrCA,KAEAG,EAAkBO,UAAY,IAGhCX,EAAOY,gBAAgBT,EAAM,yBAA0BC,QAExD,IAsBH,OApBAS,qBAAU,WACR,GAAuB,OAAnBjB,EAAOkB,QAAkB,CAC3B,IAAMd,EAASe,IAAWnB,EAAOkB,QAAS,CACxCrC,MAAOiB,EACPsB,KAAM,KACNC,aAAa,IAEfjB,EAAOkB,UAEPpB,EAAiBE,GACjBL,EAAgBD,GAChBM,EAAOmB,GAAG,UAAU,SAACC,GACnBtB,EAAiBsB,GACjBzB,EAAgByB,EAAYC,kBAK/B,IAGD,YAACC,EAAD,CAA6BC,IAAK3B,KAKtC,IAAM0B,EAA8B,wQ,kCCtDpC,EAAQ,OAAR,CAA0B,UAAU,SAAUjD,GAC5C,OAAO,SAAgBmD,GACrB,OAAOnD,EAAWoD,KAAM,IAAK,OAAQD","file":"18-be355771caafb1127fad.js","sourcesContent":["var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import styled from '@emotion/styled';\nimport Codemirror from 'codemirror';\nimport React, { useCallback, useEffect, useRef } from 'react';\n\nexport interface Props {\n  readonly initialContent: string;\n  onContentChange(newContent: string): void;\n}\nconst PredicateLogicEditor: React.FC<Props> = ({ initialContent, onContentChange }) => {\n  const domRef = useRef<HTMLPreElement>(null);\n\n  const updatePropNumber = useCallback((editor: Codemirror.Editor) => {\n    let propNumber = 1;\n\n    editor.eachLine((line) => {\n      const propNumberElement = document.createElement('div');\n      propNumberElement.className = 'CodeMirror-linenumber';\n\n      const lineNumber = editor.getLineNumber(line);\n      if (lineNumber !== null && editor.getLine(lineNumber) !== '') {\n        propNumberElement.innerHTML = String(propNumber);\n        propNumber++;\n      } else {\n        propNumberElement.innerHTML = ' ';\n      }\n\n      editor.setGutterMarker(line, 'CodeMirror-linenumbers', propNumberElement);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (domRef.current !== null) {\n      const editor = Codemirror(domRef.current, {\n        value: initialContent,\n        mode: null,\n        lineNumbers: true,\n      });\n      editor.refresh();\n\n      updatePropNumber(editor);\n      onContentChange(initialContent);\n      editor.on('change', (eventEditor) => {\n        updatePropNumber(eventEditor);\n        onContentChange(eventEditor.getValue());\n      });\n    }\n    /* This hook should be executed at most once */\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n  }, []);\n\n  return (\n    <PredicateLogicEditorWrapper ref={domRef} />\n  );\n};\nexport default PredicateLogicEditor;\n\nconst PredicateLogicEditorWrapper = styled.pre({\n  display: 'block',\n  alignSelf: 'stretch',\n\n  flexBasis: '50%',\n  flexShrink: 1,\n  flexGrow: 0,\n  minHeight: '1em',\n\n  '.CodeMirror': {\n    height: '100%',\n\n    backgroundColor: 'rgba(0,0,0,0)',\n  },\n\n  '.CodeMirror-gutters': {\n    backgroundColor: 'rgba(0,0,0,0)',\n  },\n});\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n"],"sourceRoot":""}