{"version":3,"sources":["webpack:///./src/hooks/useTimer.ts","webpack:///./src/pages/404.tsx"],"names":["useTimer","initialTime","useState","time","setTime","timeoutKey","useRef","useEffect","current","setTimeout","prevTime","clearTimeout","Time","Page404","timeLeft","navigate","replace"],"mappings":"4IAuBeA,EArBE,SAACC,GAAgC,MACxBC,mBAASD,GAA1BE,EADyC,KACnCC,EADmC,KAE1CC,EAAaC,mBAiBnB,OAfAC,qBAAU,WAQR,OAPa,IAATJ,IACFE,EAAWG,QAAUC,YAAW,WAC9BJ,EAAWG,QAAU,KACrBJ,GAAQ,SAACM,GAAD,OAAcA,EAAW,OAChC,MAGE,WACqB,MAAtBL,EAAWG,SACbG,aAAaN,EAAWG,YAG3B,CAACL,IAEGA,G,YCGHS,GAFSC,UAhBoB,WACjC,IAAMC,EAAWd,EAAS,GAQ1B,OANiB,IAAbc,GACFC,YAAS,IAAK,CACZC,SAAS,IAKX,wBACE,yCACA,oEAA+C,YAACJ,EAAD,KAAOE,GAAtD,iBAMO","file":"component---src-pages-404-tsx-c686e21300f12f7aaa22.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nconst useTimer = (initialTime: number): number => {\n  const [time, setTime] = useState(initialTime);\n  const timeoutKey = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (time !== 0) {\n      timeoutKey.current = setTimeout(() => {\n        timeoutKey.current = null;\n        setTime((prevTime) => prevTime - 1);\n      }, 1000);\n    }\n\n    return (): void => {\n      if (timeoutKey.current != null) {\n        clearTimeout(timeoutKey.current);\n      }\n    };\n  }, [time])\n\n  return time;\n};\nexport default useTimer;\n","import styled from '@emotion/styled';\nimport { navigate } from 'gatsby';\nimport React from 'react';\n\nimport useTimer from '../hooks/useTimer';\n\nconst Page404: React.FC<unknown> = () => {\n  const timeLeft = useTimer(5);\n\n  if (timeLeft === 0) {\n    navigate('/', {\n      replace: true,\n    });\n  }\n\n  return (\n    <main>\n      <h1>404: Not Found!</h1>\n      <p>will be redirected to the index page within <Time>{timeLeft}</Time> seconds...</p>\n    </main>\n  );\n};\nexport default Page404;\n\nconst Time = styled.span({\n  fontWeight: 'bold',\n});\n"],"sourceRoot":""}