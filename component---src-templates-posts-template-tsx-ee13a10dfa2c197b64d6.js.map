{"version":3,"sources":["webpack:///./src/templates/PostsTemplate.tsx"],"names":["PostsTemplate","data","location","language","locationToLanguage","backgroundSrc","title","PostListWrapper","PostList","md","posts","map","post","key","id","Post","query","PostWrapper","PostLink","to","postPath","PostTitle","frontmatter","PostDate","date","parent","PostExcerpt","excerpt","Link","fontSize","C","color","marginTop","marginLeft","width"],"mappings":"uQAkCeA,UApBwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACrC,YAAC,IAAD,KACE,YAAC,IAAD,CAAeC,SAAUC,YAAmBF,KAC5C,YAAC,IAAD,CACEG,cAAc,0EACdC,MAAM,UAER,YAACC,EAAD,KACE,YAACC,EAAD,KAEIP,EAAKQ,GAAGC,MAAMC,KAAI,SAACC,GAAD,OAChB,YAAC,WAAD,CAAUC,IAAKD,EAAKE,IAClB,YAACC,EAAS,CAAEH,iBA2BnB,IAAMI,EAAQ,aAsBfT,EAAkB,yGAOlBC,EAAW,4FASXO,EAA4B,SAAC,GAAD,MAAGH,EAAH,EAAGA,KAAH,OAChC,YAACK,EAAD,KACE,YAACC,EAAD,CAAUC,GAAIP,EAAKQ,UACjB,YAACC,EAAD,KAAYT,EAAKU,YAAYhB,OAC7B,YAAC,IAAD,MACA,YAACiB,EAAD,eAAWX,EAAKU,YAAYE,YAA5B,QAAoCZ,EAAKa,OAAOD,MAChD,YAACE,EAAD,KAAcd,EAAKe,QAAnB,WAKAV,EAAc,kGAQdC,EAAW,YAAOU,IAAP,2GASXP,EAAY,sCAAU,CAC1BQ,SAAUC,IACVC,MAAOD,MAGHP,EAAW,wCAAY,CAC3BM,SAAUC,IACVC,MAAOD,MAGHJ,EAAc,wCAAY,CAC9BM,UAAW,QACXC,WAAY,KAEZC,MAAO,MAEPL,SAAUC,IACVC,MAAOD","file":"component---src-templates-posts-template-tsx-ee13a10dfa2c197b64d6.js","sourcesContent":["import styled from '@emotion/styled';\nimport { Link, PageRendererProps, graphql } from 'gatsby';\nimport React, { Fragment } from 'react';\n\nimport { locationToLanguage } from '../languages';\nimport * as C from '../styles/constants';\nimport FlexSpacer from '../components/FlexSpacer';\nimport Layout from '../components/Layout';\nimport NavigationBar from '../components/NavigationBar';\nimport PageTitle from '../components/PageTitle';\n\ninterface Props extends PageRendererProps {\n  readonly data: Data;\n}\nconst PostsTemplate: React.FC<Props> = ({ data, location }) => (\n  <Layout>\n    <NavigationBar language={locationToLanguage(location)} />\n    <PageTitle\n      backgroundSrc='https://raw.githubusercontent.com/Ailrun/media/master/blog-img/post.png'\n      title='Posts'\n    />\n    <PostListWrapper>\n      <PostList>\n        {\n          data.md.posts.map((post) => (\n            <Fragment key={post.id}>\n              <Post {...{ post }} />\n            </Fragment>\n          ))\n        }\n      </PostList>\n    </PostListWrapper>\n  </Layout>\n);\nexport default PostsTemplate;\n\ninterface Data {\n  readonly md: {\n    readonly posts: Post[];\n  };\n}\ninterface Post {\n  readonly frontmatter: {\n    readonly title: string;\n    readonly date?: string;\n  };\n  readonly id: string;\n  readonly excerpt: string;\n  readonly postPath: string;\n  readonly parent: {\n    readonly date: string;\n  };\n}\nexport const query = graphql`\n  query ($language: String) {\n    md: allMarkdownRemark(filter: {language: {eq: $language}}) {\n      posts: nodes {\n        frontmatter {\n          title\n          date(fromNow: true)\n        }\n        id\n        excerpt\n        postPath\n\n        parent {\n          ... on File {\n            date: birthTime(fromNow: true)\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst PostListWrapper = styled.main({\n  margin: '0 20%',\n  marginTop: '2vw',\n\n  width: '60%',\n});\n\nconst PostList = styled.ul({\n  width: '100%',\n\n  listStyle: 'none',\n});\n\ninterface PostProps {\n  post: Post;\n}\nconst Post: React.FC<PostProps> = ({ post }) => (\n  <PostWrapper>\n    <PostLink to={post.postPath}>\n      <PostTitle>{post.frontmatter.title}</PostTitle>\n      <FlexSpacer />\n      <PostDate>{post.frontmatter.date ?? post.parent.date}</PostDate>\n      <PostExcerpt>{post.excerpt} ...</PostExcerpt>\n    </PostLink>\n  </PostWrapper>\n);\n\nconst PostWrapper = styled.li({\n  width: '100%',\n\n  '& + &': {\n    marginTop: '2vw',\n  },\n});\n\nconst PostLink = styled(Link)({\n  display: 'flex',\n\n  width: '100%',\n\n  alignItems: 'center',\n  flexWrap: 'wrap',\n});\n\nconst PostTitle = styled.h3({\n  fontSize: C.fontLargeSize,\n  color: C.textBlack,\n});\n\nconst PostDate = styled.span({\n  fontSize: C.fontSmallSize,\n  color: C.textVeryLightBlack,\n});\n\nconst PostExcerpt = styled.span({\n  marginTop: '0.5vw',\n  marginLeft: '2%',\n\n  width: '98%',\n\n  fontSize: C.fontBaseSize,\n  color: C.textLightBlack,\n});\n"],"sourceRoot":""}