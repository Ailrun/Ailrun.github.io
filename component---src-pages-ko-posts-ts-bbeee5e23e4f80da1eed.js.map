{"version":3,"sources":["webpack:///./src/components/FlexSpacer.ts","webpack:///./src/components/PostList.tsx","webpack:///./src/components/pages/posts.tsx","webpack:///./src/pages/ko/posts.ts","webpack:///./src/components/PageTitle.tsx","webpack:///./src/components/NavigationBar.tsx","webpack:///./src/styles/constants.ts"],"names":["FlexSpacer","PostList","postInfos","PostListRoot","map","postInfo","key","postPath","Post","PostRoot","PostLink","to","PostTitle","title","PostDate","date","PostExcerpt","dangerouslySetInnerHTML","__html","excerpt","Link","display","width","alignItems","flexWrap","C","flexDirection","marginBottom","fontSize","color","alignSelf","marginLeft","marginRight","marginTop","PostsPage","data","language","useLanguage","posts","refineData","SEO","description","pathname","NavigationBar","PageTitle","backgroundSrc","PostListWrapper","targetLanguage","targetGroup","allMarkdownPost","group","find","fieldValue","nodes","filter","post","draft","sort","post0","post1","Date","parse","dateForSort","parent","replace","Root","TitleText","height","backgroundPosition","backgroundSize","backgroundColor","backgroundImage","paddingLeft","fontWeight","Title","NavigationList","getNavigationItems","navigationItem","NavigationItem","text","position","top","left","zIndex","padding","NavigationItemRoot","Language","KO","mediaQueries","navigationBarHeight","fontSmallSize","fontBaseSize","fontLargeSize","fontHugeSize","fontGiantSize","textWhite","textBlack","textLightBlack","textVeryLightBlack","backgroundBlack","fontDancing","markdown","css","lineHeight","h1","h2","h3","p","margin","textIndent","li","table","a","textDecoration","code","overflow","borderRadius","whiteSpace","fontFamily","pre","blockquote","summary","cursor","userSelect","borderCollapse","borderTopStyle","borderColor","borderStyle","borderWidth","textAlign","border"],"mappings":"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","file":"component---src-pages-ko-posts-ts-bbeee5e23e4f80da1eed.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst FlexSpacer = styled.div({\n  flexGrow: 1,\n});\nexport default FlexSpacer;\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport React, { Fragment } from 'react';\n\nimport * as C from '../styles/constants';\n\nimport FlexSpacer from './FlexSpacer';\n\nexport interface Props {\n  readonly postInfos: PostInfo[];\n}\nconst PostList: React.FC<Props> = ({ postInfos }) => (\n  <PostListRoot>\n    {\n      postInfos.map((postInfo) => (\n        <Fragment key={postInfo.postPath}>\n          <Post postInfo={postInfo} />\n        </Fragment>\n      ))\n    }\n  </PostListRoot>\n);\nexport default PostList;\n\nexport interface PostInfo {\n  readonly title: string;\n  readonly date: string;\n  readonly excerpt: string;\n  readonly postPath: string;\n}\n\nconst PostListRoot = styled.ul({\n  width: '100%',\n\n  listStyle: 'none',\n});\n\ninterface PostProps {\n  postInfo: PostInfo;\n}\nconst Post: React.FC<PostProps> = ({ postInfo }) => {\n  return (\n    <PostRoot>\n      <PostLink to={postInfo.postPath}>\n        <PostTitle>{postInfo.title}</PostTitle>\n        <FlexSpacer />\n        <PostDate>{postInfo.date}</PostDate>\n        <PostExcerpt\n          dangerouslySetInnerHTML={{ __html: postInfo.excerpt }}\n        />\n      </PostLink>\n    </PostRoot>\n  );\n};\n\nconst PostRoot = styled.li({\n  marginBottom: '40px',\n\n  width: '100%',\n});\n\nconst PostLink = styled(Link)({\n  display: 'flex',\n\n  width: '100%',\n\n  alignItems: 'center',\n  flexWrap: 'wrap',\n\n  [C.mediaQueries[0]]: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n});\n\nconst PostTitle = styled.h3({\n  marginBottom: '0.5em',\n\n  fontSize: C.fontLargeSize,\n  color: C.textBlack,\n\n  [C.mediaQueries[0]]: {\n    marginBottom: 0,\n\n    fontSize: C.fontBaseSize,\n  },\n});\n\nconst PostDate = styled.span({\n  fontSize: C.fontSmallSize,\n  color: C.textVeryLightBlack,\n\n  [C.mediaQueries[0]]: {\n    alignSelf: 'flex-end',\n  },\n});\n\n/**\n * This component should use `div` or similar to display\n * inner `p`, `h1`, etc.\n */\nconst PostExcerpt = styled.div({\n  marginLeft: '1em',\n\n  width: 'calc(100% - 1em)',\n\n  fontSize: C.fontBaseSize,\n  color: C.textLightBlack,\n\n  '*': {\n    display: 'inline',\n  },\n\n  'h1, h2, h3, h4, h5, h6': {\n    display: 'none',\n  },\n\n  [C.mediaQueries[0]]: {\n    marginLeft: '0.5em',\n    marginRight: '0.5em',\n    marginTop: '0.5em',\n\n    fontSize: C.fontSmallSize,\n  },\n});\n","import styled from '@emotion/styled';\nimport { PageRendererProps, graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport useLanguage from '../../hooks/useLanguage';\nimport type { Language } from '../../utils/languages';\nimport NavigationBar from '../NavigationBar';\nimport PageTitle from '../PageTitle';\nimport PostList, { PostInfo } from '../PostList';\nimport SEO from '../SEO';\n\nconst PostsPage: React.FC<PageRendererProps> = () => {\n  const data = useStaticQuery<Data>(query);\n  const language = useLanguage();\n\n  const posts = refineData(data, language);\n\n  return (\n    <>\n      <SEO\n        title='Posts'\n        description='List of Posts in VoV'\n        pathname={`/${language}/posts`}\n      />\n      <NavigationBar />\n      <PageTitle\n        backgroundSrc='https://raw.githubusercontent.com/Ailrun/media/master/blog-img/post.png'\n        title='Posts'\n      />\n      <PostListWrapper>\n        <PostList postInfos={posts} />\n      </PostListWrapper>\n    </>\n  );\n};\nexport default PostsPage;\n\ninterface Data {\n  readonly allMarkdownPost: {\n    readonly group: {\n      readonly fieldValue: Language;\n      readonly nodes: DataMarkdownPost[];\n    }[];\n  };\n}\ninterface DataMarkdownPost {\n  readonly title: string;\n  readonly date: string;\n  readonly dateForSort: string;\n  readonly postPath: string;\n  readonly draft: boolean;\n  readonly parent: {\n    readonly excerpt: string;\n  };\n} \nconst query = graphql`\n  query {\n    allMarkdownPost {\n      group(field: language) {\n        fieldValue\n        nodes {\n          title\n          date(fromNow: true)\n          dateForSort: date\n          postPath\n          draft\n          parent {\n            ... on MarkdownRemark {\n              excerpt(format: HTML, pruneLength: 100, truncate: true)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst refineData = (data: Data, targetLanguage: Language): PostInfo[] => {\n  const targetGroup =\n    data.allMarkdownPost.group\n      .find(({ fieldValue }) => fieldValue === targetLanguage);\n\n  return (targetGroup?.nodes ?? [])\n    .filter((post) => process.env.NODE_ENV === 'development' || !post.draft)\n    .sort((post0, post1) => Date.parse(post1.dateForSort) - Date.parse(post0.dateForSort))\n    .map(({ dateForSort, draft, parent, ...postInfo }) => ({\n      ...postInfo,\n      /* Try to make the excerpt WAI compatible */\n      excerpt: parent.excerpt\n        .replace(/<a>/g, '<p>')\n        .replace(/<a /g, '<p ')\n        .replace(/<\\/a>/g, '</p>'),\n    }));\n};\n\nconst PostListWrapper = styled.main({\n  margin: '0 20vw',\n  marginTop: '60px',\n\n  width: '60vw',\n  minHeight: '50vh',\n});\n","import PostsPage from '../../components/pages/posts';\n\nexport default PostsPage;\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nimport * as C from '../styles/constants';\n\nexport interface Props {\n  readonly backgroundSrc: string;\n  readonly title: string;\n}\nconst PageTitle: React.FC<Props> = ({ backgroundSrc, title }) => (\n  <Root backgroundSrc={backgroundSrc}>\n    <TitleText>{title}</TitleText>\n  </Root>\n);\nexport default PageTitle;\n\ninterface RootProps {\n  readonly backgroundSrc: string;\n}\nconst Root = styled.header<RootProps>({\n  display: 'flex',\n\n  width: '100%',\n  height: '24vw',\n\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundColor: 'black',\n\n  alignItems: 'center',\n\n  [C.mediaQueries[0]]: {\n    height: '44vw',\n\n    backgroundPosition: 'right',\n  },\n}, ({ backgroundSrc }) => ({\n  backgroundImage: `url('${backgroundSrc}')`,\n}));\n\nconst TitleText = styled.h1({\n  paddingLeft: '7%',\n\n  color: C.textWhite,\n  fontWeight: 'bold',\n  fontSize: C.fontGiantSize,\n\n  [C.mediaQueries[0]]: {\n    fontSize: C.fontHugeSize,\n  },\n});\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport React from 'react';\n\nimport useLanguage from '../hooks/useLanguage';\nimport * as C from '../styles/constants';\nimport { Language } from '../utils/languages';\n\nimport FlexSpacer from './FlexSpacer';\n\nconst NavigationBar: React.FC<unknown> = () => {\n  const language = useLanguage();\n\n  return (\n    <Root>\n      <Title to={`/${language}/`}>\n        Valhalla of Valkyrie\n      </Title>\n      <FlexSpacer />\n      <NavigationList>\n        {\n          getNavigationItems(language).map((navigationItem) => (\n            <NavigationItem key={navigationItem.text} {...navigationItem} />\n          ))\n        }\n      </NavigationList>\n    </Root>\n  );\n};\nexport default NavigationBar;\n\nconst Root = styled.nav({\n  display: 'flex',\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n\n  width: '100vw',\n  height: C.navigationBarHeight,\n\n  backgroundColor: C.backgroundBlack,\n\n  color: C.textWhite,\n\n  alignItems: 'center',\n});\n\nconst Title = styled(Link)({\n  display: 'inline-block',\n\n  padding: '0 0.5em',\n\n  fontSize: C.fontLargeSize,\n\n  [C.mediaQueries[0]]: {\n    display: 'none',\n  },\n}, C.fontDancing);\n\nconst NavigationList = styled.ul({\n  display: 'flex',\n\n  /* Approximate maximum size of scrollbar\n   */\n  marginRight: '20px',\n\n  listStyle: 'none',\n\n  alignItems: 'center',\n});\n\ninterface ItemProps {\n  readonly to: string;\n  readonly text: string;\n}\nconst NavigationItem: React.FC<ItemProps> = ({ to, text }) => {\n  return (\n    <NavigationItemRoot>\n      <Link to={to}>\n        {text}\n      </Link>\n    </NavigationItemRoot>\n  );\n};\nconst NavigationItemRoot = styled.li({\n  display: 'inline-block',\n\n  padding: '0 0.5em',\n\n  fontSize: C.fontLargeSize,\n}, C.fontDancing);\n\n\nconst getNavigationItems: (language: Language) => ItemProps[] = (language) => {\n  return [\n    ...(\n      language === Language.KO ?\n        [{ to: `/${language}/posts/`, text: 'Posts' }] :\n        []\n    ),\n    ...[\n      { to: `/${language}/projects/`, text: 'Projects' },\n      { to: `/${language}/about/`, text: 'About' },\n    ],\n  ];\n};\n","import { SerializedStyles, css } from '@emotion/core';\n\nexport const mediaQueries = [\n  '@media (max-width: 60em)',\n];\n\nexport const navigationBarHeight = '42px';\n\nexport const fontSmallSize = '10pt';\nexport const fontBaseSize = '12pt';\nexport const fontLargeSize = '18pt';\nexport const fontHugeSize = '24pt';\nexport const fontGiantSize = '30pt';\n\nexport const textWhite = 'rgba(255, 255, 255, 0.84)';\nexport const textLightWhite = 'rgba(255, 255, 255, 0.73)';\nexport const textBlack = 'rgba(0, 0, 0, 0.84)';\nexport const textLightBlack = 'rgba(0, 0, 0, 0.73)';\nexport const textVeryLightBlack = 'rgba(0, 0, 0, 0.6)';\nexport const textBrown = 'rgba(100, 50, 50, 0.84)';\nexport const textLightBrown = 'rgba(150, 80, 50, 0.84)';\nexport const textRed = 'rgba(108, 0, 0, 0.84)';\nexport const textLightRed = 'rgba(216, 0, 0, 0.84)';\n\nexport const backgroundBlack = 'rgba(0, 0, 0, 0.73)';\nexport const backgroundWhite = 'rgba(255, 255, 255, 0.73)';\nexport const backgroundGray = 'rgba(200, 200, 200, 0.73)';\n\nexport const fontDancing: SerializedStyles = css({\n  fontFamily: '\"Dancing Script\", cursive',\n});\n\nexport const markdown: SerializedStyles = css({\n  color: textBlack,\n  fontSize: '12pt',\n\n  lineHeight: '1.7',\n\n  'h1, h2, h3, h4, h5, h6': {\n    marginTop: '1em',\n    marginBottom: '0.5em',\n  },\n\n  h1: {\n    fontSize: '20pt',\n  },\n\n  h2: {\n    fontSize: '18pt',\n  },\n\n  h3: {\n    fontSize: '16pt',\n  },\n\n  p: {\n    margin: '0 1em',\n    marginTop: '1em',\n\n    textIndent: '1em',\n  },\n\n  'ol, ul': {\n    margin: '0 3em',\n    marginTop: '1em',\n\n    '> * > ol, > * > ul': {\n      margin: '0',\n      marginLeft: '0.5em',\n    },\n\n    '+ p': {\n      textIndent: 0,\n    },\n  },\n\n  li: {\n    marginTop: '0.5em',\n    marginLeft: '1em',\n\n    '> p': {\n      margin: 0,\n    },\n\n    '> p:first-of-type': {\n      textIndent: 0,\n    },\n\n    '> .truth-table': {\n      table: {\n        margin: '1em 0',\n      },\n    },\n\n    '> * > li': {\n      marginTop: '0.1em',\n\n      '> * > li': {\n        marginTop: 0,\n      },\n    },\n  },\n\n  a: {\n    color: textLightRed,\n\n    ':hover': {\n      textDecoration: 'underline',\n    },\n\n    ':visited': {\n      color: textRed,\n    },\n  },\n\n  code: {\n    margin: '0 0.5ex',\n\n    padding: '0 0.3em',\n\n    overflow: 'none',\n\n    backgroundColor: backgroundGray,\n    borderRadius: '3px',\n\n    whiteSpace: 'nowrap',\n\n    fontFamily: 'monospace',\n  },\n\n  pre: {\n    margin: '0 0.5ex',\n\n    padding: '0 0.3em',\n\n    backgroundColor: backgroundGray,\n    borderRadius: '3px',\n\n    '> code': {\n      margin: 0,\n\n      padding: 0,\n\n      backgroundColor: 'initial',\n      borderRadius: '0',\n    },\n  },\n\n  blockquote: {\n    margin: '1.5em 1.5em',\n\n    color: textVeryLightBlack,\n\n    '+ p': {\n      textIndent: '0',\n    },\n  },\n\n  'details.answer': {\n    display: 'block',\n\n    marginBottom: '0.5em',\n\n    summary: {\n      width: 'fit-content',\n\n      cursor: 'pointer',\n      userSelect: 'none',\n\n      p: {\n        display: 'inline',\n\n        margin: 0,\n\n        textIndent: 0,\n      },\n\n      'p:first-of-type': {\n        marginTop: '-1.5em',\n      },\n\n      '+ p': {\n        margin: 0,\n        marginLeft: '1em',\n      },\n\n      '+ ol, + ul': {\n        margin: '1em 1em',\n      },\n    },\n  },\n\n  '.truth-table': {\n    table: {\n      margin: '1em 3em',\n\n      backgroundColor: backgroundWhite,\n      borderCollapse: 'collapse',\n\n      '> thead + tbody': {\n        borderTopStyle: 'double',\n      },\n\n      '> * > tr': {\n        '> th, > td': {\n          padding: '0 0.5em',\n\n          borderColor: textLightBlack,\n          borderStyle: 'solid',\n          borderWidth: '1px',\n\n          textAlign: 'center',\n        },\n      },\n\n      '+ p': {\n        textIndent: 0,\n      },\n    },\n  },\n\n  'iframe[src^=\"/\"]': {\n    display: 'block',\n    margin: '2em 10%',\n\n    width: '80%',\n\n    border: 'none',\n  },\n});\n"],"sourceRoot":""}